% Script to parse PNAS title data

word_len_threshold = 2; % Remove words with length <= to this
stopwords = {'a','able','about','across','after','all','almost', ...
  'also','am','among','an','and','any','are','as','at','be', ...
  'because','been','but','by','can','can''t','cannot','could','couldn''t','dear', ...
  'did','didn''t','do','don''t','does','doesn''t','either','else','ever','every','for','from', ...
  'get','got','had','has','have','he','her','hers','him','his', ...
  'how','however','i','i''m','if','in','into','is','it','its','it''s','just', ...
  'least','let','like','likely','may','me','might','most','must', ...
  'my','neither','no','nor','not','null','of','off','often','on','only', ...
  'or','other','our','own','rather','said','say','says','she', ...
  'should','shouldn''t','since','so','some','than','that','the','their','them', ...
  'then','there','these','they','this','tis','to','too','twas', ...
  'us','wants','was','we','were','what','when','where','which', ...
  'while','who','whom','why','will','won''t','with','would','wouldn''t','yet','you','your', ...
  'myself', 'himself', 'herself', 'itself', 'themselves', ...
  'yourself', 'yourselves', 'now'};
stopwords_dict = containers.Map('KeyType','char','ValueType','uint32');
for i = 1:length(stopwords)
  stopwords_dict(stopwords{i}) = 1;
end

load('pnas_all.mat');

% Purge empty documents
bad_set = [];
N = length(titles);
for i = 1:N
  if length(titles{i}) == 0
    fprintf('Removing empty document %d/%d...\n',i,N);
    bad_set(end+1) = i;
  end
end
fprintf('%d empty documents removed\n',length(bad_set));
titles(bad_set) = [];
times(bad_set) = [];

% Generate vocabulary
N = length(titles);
word_idx = 0;
vocab = {};
dict = containers.Map('KeyType','char','ValueType','uint32');
disp('Generating vocab...');
for i = 1:N
  if mod(i,10000) == 0
    fprintf('Doc %d/%d...\n',i,N);
  end
  toks = textscan(titles{i},'%s');
  toks = toks{1};
  for j = 1:length(toks)
    word = toks{j};
    % Check if word is valid
    if stopwords_dict.isKey(word) || length(word) <= word_len_threshold
      continue
    end
    if ~dict.isKey(word)
      word_idx = word_idx + 1;
      dict(word) = word_idx;
      vocab{end+1} = word;
    end
  end
end
V = word_idx;

% Generate data matrix
data = sparse(N,V);
disp('Generating data matrix...');
for i = 1:N
  if mod(i,10000) == 0
    fprintf('Doc %d/%d...\n',i,N);
  end
  toks = textscan(titles{i},'%s');
  toks = toks{1};
  for j = 1:length(toks)
    word = toks{j};
    if dict.isKey(word)
      idx = dict(word);
      data(i,idx) = data(i,idx) + 1;
    end
  end
end

% Convert times from UNIX time to year
year = 60*60*24*365;
times_year = zeros(N,1);
for i = 1:N
  times_year(i) = 1970 + times(i)/year;
end

% Save data
save('pnas_parsed.mat','times','times_year','titles','data','vocab');
